plugins {
    id 'java'
    id 'maven'
    id 'signing'
    id 'com.github.hierynomus.license' version '0.14.0'
    id 'eclipse'
    id 'com.github.johnrengelman.shadow' version '5.0.0'
}

version = '1.80'
group = 'nl.junglecomputing'
archivesBaseName = 'smartsockets'

defaultTasks 'jar', 'shadowJar'

// Prevent warning about POM relocation not being fully supported
configurations.all {
    resolutionStrategy {
        force 'xml-apis:xml-apis:1.4.01'
    }
}

repositories {
    // mavenLocal()
    mavenCentral()
}

dependencies {
    compile group: 'nl.junglecomputing', name: 'touchgraph', version: '1.58'
    compile group: 'org.apache.sshd', name: 'sshd-mina', version: '2.2.0'
    compile group: 'net.i2p.crypto', name: 'eddsa', version: '0.3.0'
    compile group: 'nl.junglecomputing', name: 'sbbi-upnplib', version: '1.0.4'
    compile group: 'de.javawi.jstun', name: 'jstun', version: '0.7.4'
    compile group: 'com.google.guava', name: 'guava', version: '19.0'
    compile group: 'commons-logging', name: 'commons-logging', version: '1.2'
    compile group: 'commons-jxpath', name: 'commons-jxpath', version: '1.1'
    compile group: 'log4j', name: 'log4j', version: '1.2.13'
    compile group: 'org.slf4j', name: 'slf4j-api', version: '1.7.21'
    testCompile group: 'org.slf4j', name: 'slf4j-log4j12', version: '1.7.21'
}

signing {
    sign configurations.archives
}

license {
    ext.copyright_year = 2010
    ext.copyright_owner = 'Vrije Universiteit'
    header rootProject.file('gradle/HEADER')
    strictCheck true
    excludes(["**/log4j.properties"])
    mapping {
        // IntelliJ IDEA gives "Dangling Javadoc comment." warning when default JAVADOC_STYLE is used,
        // so switch to comment style
        java = 'SLASHSTAR_STYLE'
    }
}

licenseFormat.description = "Applies the license found in the header file in files missing the header"

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

javadoc.failOnError = false
task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives sourcesJar
    archives javadocJar
}

tasks.withType(Jar) {
    destinationDir = file("$rootDir/lib")
}

task copyRuntimeLibs(type: Copy) {
    into "lib"
    from configurations.runtime
}

uploadArchives {
  repositories {
    mavenDeployer {
      beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

      repository(url: "https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/") {
        authentication(userName: ossrhUsername, password: ossrhPassword)
      }

      snapshotRepository(url: "https://s01.oss.sonatype.org/content/repositories/snapshots/") {
        authentication(userName: ossrhUsername, password: ossrhPassword)
      }

      pom.project {
        name 'SmartSockets'
        packaging 'jar'
        description 'Smartsockets is an open source communication library that automatically discovers many of the connectivity problems and solves them with as little support from the user as possible.'

        url 'https://github.com/junglecomputing/smartsockets'

        scm {
          connection 'scm:git:git://github.com/junglecomputing/smartsockets.git'
          developerConnection 'scm:git:ssh://github.com:junglecomputing/smartsockets.git'
          url 'https://github.com/junglecomputing/smartsockets/tree/master'
        }

        licenses {
          license {
            name 'The Apache License, Version 2.0'
            url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
          }
        }

        developers {
          developer {
            name = 'Jason Maassen'
            organization = 'Netherlands escience Center'
            url = 'https://www.esciencecenter.nl/team/dr-jason-maassen/'
          }
        }
      }
    }
  }
}

shadowJar {
   dependencies {
      exclude(dependency('org.slf4j:slf4j-api'))
      exclude(dependency('log4j:log4j'))
   }
}
